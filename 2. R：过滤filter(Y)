本文主要介绍如何根据条件对表格进行过滤，主要使用filter函数进行实现

这里用到R自带的mtcars数据集
library(tidyverse)
# 首先，我们把行的名称转化为一列数据，名为rownames
# 然后，把数据库转化为tibble格式，存在mtcars1变量中
mtcars %>%
rownames_to_column() %>%
as_tibble() -> mtcars1
mtcars1

实际工作中，经常会需要用到把一定条件的记录调出来的情况
比如我们需要提取cyl为4的记录（cyl代表汽车汽缸的数量），就需要用到条件过滤：
mtcars1 %>%
filter(cyl == 4)
如何定义条件？很简单，是或不是
比如上面的例子，如果cyl等于4，就符合条件，否则不符合条件
基本的条件操作符如下所示：
== 等于
!= 不等于
> 大于
>= 大于等于
< 小于
<= 小于等于
is.na() 是否为缺失值
下面再举一个例子，比如我们需要除了4个汽缸以外的数据：
mtcars1 %>%
filter(cyl != 4)

过滤缺失值：
比如计算均值的时候，不容许数据中包含缺失值
如何去掉缺失值呢？可以使用drop_na函数
下面先构造一个3*2的数据框，并在里面设置缺失值
tibble(x = c(1, 2, NA),y = c('a', NA, 'b')) -> df
df  # 原始数据框
df %>% drop_na()  # 去掉含有缺失值的行，也可以使用函数na.omit移除所有含有缺失值的观测
df %>% drop_na(x)  # 去掉x列含有缺失值的行（会连带去掉相应的该行y值）
df %>% drop_na(y)
可以看到，使用drop_na函数，可以轻松去掉包含缺失值的行，而且还可以指定去除某列中含有缺失值的行
那么，如何找到这些具有缺失值的行呢？可以利用is.na函数
df %>%
filter(is.na(x))

组合过滤：
当条件很多时，我们可以使用逻辑操作符把条件组合起来，一起进行过滤
经典的逻辑操作符包括 &（与）、|（或）、!（非），有的编程语言会用英语AND/OR/NOT来表示这些逻辑关系，但是在逻辑层面上表达是一致的
下面通过一个例子来说明这些逻辑关系：
&：如果顾客最近一周买了东西且（&）买的东西超过100元，那么我们把这些顾客的交易记录调出来；
|：如果顾客最近一周买了东西或者（|）购买东西的频率维持在一周一次，那么我们把这些顾客的交易记录调出来；
!：我们只考虑女性客户，因此男性客户都剔除（!）掉。

& 操作符
我们想要筛选气缸（cyl）为4，而且马力（hp）大于100的汽车
mtcars1 %>%
filter(cyl == 4 & hp > 100)
# 等价于
mtcars1 %>%
filter(cyl == 4, hp > 100)

| 操作符
我们想要筛选气缸（cyl）为4，或者马力（hp）大于100的汽车。
mtcars1 %>%
filter(cyl == 4 | hp > 100)

! 操作符
我们想要筛选除了4个气缸以外的汽车记录。
mtcars1 %>%
filter(!cyl == 4)
# 等价于
mtcars1 %>%
filter(cyl != 4)

文本过滤:
数据表中的数据不都是数值型的，有的是字符串格式存在的文本
在我们的例子中，比如我们想了解 Merc 这个型号的车，那么我们就要从rowname列中个提取包含“Merc”的行
tidyverse包中，包含了stringr包，可以对字符串进行识别、替换、提取等高级操作
如果我们要根据字符串进行过滤，就需要用到str_detect函数，例子如下：
# 提取rowname中包含“Merc”的记录
mtcars1 %>%
filter(str_detect(rowname, pattern = "Merc"))
我们看到pattern参数中，我们赋予了“Merc”模式
事实上，pattern可以接受正则表达式的内容，比如我们要搜索以M开头的车型，那么就可以把pattern改为“^M”：
mtcars1 %>%
filter(str_detect(rowname, pattern = "^M"))
正则表达式是一个很有用的工具，如果能够写出高效的正则表达式，就能够对字符串进行更加高级的筛选

# 例子
read.xlsx('kou.xlsx', sheetName = '585019681', encoding = 'UTF-8') -> data
data %>%
  rownames_to_column() %>%
  as_tibble() -> data.1
data.1 %>%
  filter(data.1$课程名称 == '语言学导论') -> yuyan
write.xlsx(yuyan, 'yuyan.xlsx')
